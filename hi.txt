python3 -m venv django_env

python3 -m pip install --upgrade pip

python3 -m pip install Django
python3 -m pip install psycopg2-binary

python3 -m pip install --force-reinstall -r requirement.txt

python3 -m django --version

python3 manage.py startapp appname

python3 -m django startproject d05

/Users/seapark/.brew/Library/Taps/homebrew/homebrew-services/lib/services_cli.rb

슬랙
brew update
brew install postgresql
gem install pg
brew tap homebrew/services
brew services start postgresql

1. 홈브류설치

2. 홈브류로 postgresql설치
brew install postgresql

3. 서버 실행
brew services start postgresql

4. db 생성. 프로젝트 조건 -> 디비 이름 : djangotraining
initdb $HOME/.brew/var/postgres

createdb djangotraining

5. db 접속
psql djangotraining

6. CREATE ROLE. user 만들기. 프로젝트 조건-> djangouser/secret
create user djangouser password 'secret';

7. djangouser에게 데이터베이스 djangotraining 소유권 주기.
alter database djangotraining owner to djangouser;

8. djangouser에게 모든 권한 주기
grant all on database djangotraining to djangouser with grant option;

테이블 리스트 확인
\dt

python3 manage.py makemigrations
python3 manage.py migrate

source venv/bin/activate


python3 manage.py runserver 8000

python3 manage.py startapp appname

nginx -c $HOME/Desktop/Piscine_Python_Django/d08/nginx.conf

nginx -c /Users/seapark/rush01/rush01-instra.net-park-shin-kang/R01/nginx.conf

nginx -s stop

lsof -t -i tcp:8000 | xargs kill -9

python3 -m gunicorn --bind 127.0.0.1:8000 d42.wsgi

#파이썬에서 사용하는 스태틱 파일 다 모아주기
python3 manage.py collectstatic